<svg
  xmlns="http://www.w3.org/2000/svg"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  width="100%"
  height="100%"
  viewBox="0 0 800 600"
>
  <!-- Underlay Image -->
  <image
    x="0"
    y="0"
    width="800"
    height="600"
    xlink:href="https://telegraph-image-bak.pages.dev/file/e01e5a33de465a3a7edfc.png"
  ></image>

  <!-- Overlay Image -->
  <image
    x="0"
    y="0"
    width="800"
    height="600"
    xlink:href="https://telegraph-image-bak.pages.dev/file/900af1ded9657b3c3ec4d.png"
    id="overlay-image"
    style="display: none;"
  ></image>

  <!-- Mirror -->
  <rect
    x="50"
    y="50"
    width="50"
    height="50"
    fill="rgba(255, 255, 255, 0.8)"
    stroke="#ccc"
    stroke-width="2"
    cursor="move"
    id="mirror"
  ></rect>

  <script type="application/ecmascript">
    const overlayImage = document.getElementById("overlay-image");

    function handleResize() {
      // Adjust scaling based on the window size or container size
      // You may need to adapt this logic based on your specific requirements
      const scaleX = window.innerWidth / 800;
      const scaleY = window.innerHeight / 600;
      const scale = Math.min(scaleX, scaleY);

      overlayImage.setAttribute("transform", `scale(${scale})`);
    }

    function handleTabSwitch() {
      overlayImage.style.display = "block";
    }

    window.addEventListener("resize", handleResize);
    window.addEventListener("focus", handleTabSwitch);
    window.addEventListener("blur", () => (overlayImage.style.display = "none"));

    handleResize(); // Initial scaling
  </script>
</svg>
